#--------------------------------------------------------------------------
#
#   Copyright (c) 2005, Paul Koning (see pterm-license.txt)
#
#   Name: Makefile.wxpterm
#
#   Description:
#       Build wxWidgets version of PLATO terminal emulation.
#
#--------------------------------------------------------------------------

PTERMVERSION ?= $(shell ./getkitver.py  ptermversion.h)

DEFWXDIR = /usr/local

# Files that contain _() calls (translatable text strings)
SOURCES = FrameCanvas.cpp PtermApp.cpp PtermConnDialog.cpp \
	PtermConnFailDialog.cpp PtermConnection.cpp PtermPrefDialog.cpp \
	PtermPrintout.h MTFile.cpp

ifeq ("$(HOST)","Darwin")
PKGMAKER ?= /Developer/Applications/Utilities/PackageMaker.app
MACEXTRA = fixmac.o
ifneq ("$(CLANG)", "")
MACCFLAGS = -Wno-potentially-evaluated-expression
endif
ifeq ("$(wildcard $(PKGMAKER))","")
PKGMAKER = /Applications/Utilities/PackageMaker.app
endif
PTERMPKGNAME ?= "Install-Pterm.pkg"

ifeq ("$(OSXVER)", "10.5")
ifeq ("$(wildcard /Library/Frameworks/SDL2.framework)","")
SDLFW ?= SDL
else
SDLFW ?= SDL2
endif
SDLLIBS ?= -Wl,-framework,$(SDLFW)
#SDLINCL ?= -I/usr/local/include -I/usr/include -F/Library/Frameworks/$(SDLFW).framework
endif
else
SDLFW=
endif
#else
SDLPATH ?= /usr/local
SDLINCL ?= `sdl-config --cflags`
PATH:=$(SDLPATH)/bin:$(PATH)
ifeq ("$(TYPE)","static")
SDLLIBS ?= `sdl-config --static-libs`
else
SDLLIBS ?= `sdl-config --libs`
endif

SNDDIR ?= /usr
ifeq ("$(wildcard $(SNDDIR)/include/sndfile.h)","")
SNDDIR = /usr/local
endif
SNDINCL ?= $(SNDDIR)/include
SNDLIBS ?= -lsndfile

# if the wxmumble dir doesn't exist, try for plain /usr
ifeq ("$(wildcard $(DEFWXDIR))","")
DEFWXDIR=/usr
endif
WXDIR ?= $(DEFWXDIR)

PATH:=$(WXDIR)/bin:$(PATH)

WXCONFIG ?= wx-config
CXXFLAGS = `$(WXCONFIG) --cxxflags` -fno-strict-aliasing  -I $(SNDINCL)
WXLIBS	= `$(WXCONFIG) --libs` $(EXTRALIBS) 

GCCVERSION := $(shell gcc --version 2>/dev/null| head -1 | awk '{print $$3}')
GCCVERSION := $(word 1, $(subst ., ,$(GCCVERSION)))

C2FLAGS  = $(OPTIMIZE) -g2 $(INCL) $(CDEBUG) $(MACHINECFLAGS) $(ARCHCCFLAGS) $(EXTRACFLAGS) $(VERSIONCFLAGS) -DHOST_$(HOST) $(PFLAGS) $(MACCFLAGS)

MSGFLAGS ?= -U

SDLCFLAGS = $(SDLINCL)

PTOBJS	= dtnetsubs.o pterm_sdl.o FrameCanvas.o MTFile.o PtermApp.o \
	PtermConnDialog.o PtermConnFailDialog.o PtermConnection.o \
	PtermProfile.o PtermPrefDialog.o PtermPrintout.o PtermTrace.o Z80.o
DD60OBJS = $(SOBJS) dd60.o knob.o iir.o 

ifneq ("$(PTERMVERSION)","xxx")
LANGUAGES = $(shell cat languages)
MOFILES = $(addsuffix /pterm.mo,$(LANGUAGES))
#LANGUAGES =
#MOFILES =
endif

PTDEPS = $(PTOBJS:.o=.d) 
ifneq ("$(wildcard sourcefiles.py)","")
.PHONY : pterm-tar 
PTSRCS = $(shell ./sourcefiles.py $(PTDEPS))
endif

.PHONY : pterm-kit langdirs wxversion info

info:
	@echo wxdir: $(WXDIR)
	@echo sdlcflags: $(SDLCFLAGS)
	@echo sdllibs: $(SDLLIBS)
	@echo path:  $(PATH)
	@echo wxversion: $(WXVERSION)
	@echo gccversion: $(GCCVERSION)
	@echo ptermsvn: $(PTERMSVNREV)
	@echo osxver: $(OSXVER)

pterm:	$(PTOBJS) $(MACEXTRA)
	$(LINK) $(ARCHLDFLAGS) $(LDFLAGS) $(LIBS) -g2 -o $@ $+ $(WXLIBS) $(SDLLIBS) $(SNDLIBS) $(SETPATH)
ifeq ("$(HOST)","Darwin")
	#strip $@
else
	#objcopy  -S -R.compact_rel -R.pdr -R.ident -R.comment $@
endif

wxversion.h : wxversion wxversion.py
	./wxversion.py

ptermhelp.h : PtermHelpHeader.py ptermhelp.mte
	python3 PtermHelpHeader.py ptermhelp.mte ptermhelp.h

dd60:	$(DD60OBJS)
	export LD_RUN_PATH=$(WXDIR)/lib ; \
	$(LINK)  $(ARCHLDFLAGS) $(LDFLAGS) $(LIBS) -o $@ $+ $(WXLIBS) $(SETPATH)

dtoper:	$(SOBJS) dtoper.o 
	export LD_RUN_PATH=$(WXDIR)/lib ; \
	$(LINK)  $(ARCHLDFLAGS) $(LDFLAGS) $(LIBS) -o $@ $+ $(WXLIBS) $(SETPATH)

# console display test program
cc545:	cc545.o knob.o iir.o
	export LD_RUN_PATH=$(WXDIR)/lib ; \
	$(LINK) $(CXXFLAGS) $(LDFLAGS) $(LIBS) -o $@ $+ $(WXLIBS) $(SETPATH)

ifeq ("$(HOST)","Darwin")

dd60.app: dd60 cyber.icns dd60-info.plist
	mkdir -p dd60.app/Contents/MacOS dd60.app/Contents/Resources
	/bin/echo -n "APPL????" > dd60.app/Contents/PkgInfo
	cp dd60 dd60.app/Contents/MacOS
	cp dd60-info.plist dd60.app/Contents/Info.plist
	cp cyber.icns dd60.app/Contents/Resources/dd60.icns
	touch $@

dtoper.app: dtoper cyber.icns dtoper-info.plist
	mkdir -p dtoper.app/Contents/MacOS dtoper.app/Contents/Resources
	/bin/echo -n "APPL????" > dtoper.app/Contents/PkgInfo
	cp dtoper dtoper.app/Contents/MacOS
	cp dtoper-info.plist dtoper.app/Contents/Info.plist
	cp cyber.icns dtoper.app/Contents/Resources/dtoper.icns
	touch $@

cc545.app: cc545
	mkdir -p cc545.app/Contents/MacOS
	cp cc545 cc545.app/Contents/MacOS
	touch $@

Pterm.app: pterm pterm-info.plist pterm.icns $(MOFILES) ptermhelp.mte
	rm -rf Pterm.app
	mkdir -p Pterm.app/Contents/MacOS Pterm.app/Contents/Resources/en.lproj
	mkdir -p $(addprefix $(addprefix Pterm.app/Contents/Resources/,$(LANGUAGES)),.lproj)
	cp pterm-info.plist Pterm.app/Contents/Info.plist
	/bin/echo -n "APPL????" > Pterm.app/Contents/PkgInfo
	cp pterm Pterm.app/Contents/MacOS/pterm
	strip Pterm.app/Contents/MacOS/pterm
ifneq ("$(SDLFW)", "")
	install_name_tool -change @rpath/$(SDLFW).framework/Versions/A/$(SDLFW) @loader_path/../Frameworks/$(SDLFW).framework/Versions/A/$(SDLFW) Pterm.app/Contents/MacOS/pterm
endif
	cp pterm.icns Pterm.app/Contents/Resources/Pterm.icns
	cp ptermhelp.mte Pterm.app/Contents/Resources/
	for d in $(LANGUAGES); do \
	    cp $$d/pterm.mo Pterm.app/Contents/Resources/$${d}.lproj; \
	done
	mkdir -p Pterm.app/Contents/Frameworks
ifneq ("$(SDLFW)", "")
	cp -R /Library/Frameworks/$(SDLFW).framework Pterm.app/Contents/Frameworks
	rm -rf Pterm.app/Contents/Frameworks/$(SDLFW).framework/Headers
	rm -rf Pterm.app/Contents/Frameworks/$(SDLFW).framework/Versions/Current/Headers
endif
	codesign --deep -s ni1d Pterm.app

pterm-empty.dmg:
	hdiutil create -size 32m pterm-empty.dmg -layout NONE
	dev=`hdid -nomount pterm-empty.dmg` ; newfs_hfs -v ptermvol $$dev ; hdiutil detach $$dev

$(PTERMPKGNAME): Pterm.app Pterm.pmdoc
	$(PKGMAKER)/Contents/MacOS/PackageMaker --verbose --doc Pterm.pmdoc --out $@

ptermkit.dmg: $(PTERMPKGNAME) pterm-empty.dmg
	cp pterm-empty.dmg ptermkit.dmg
	dev=`hdid ptermkit.dmg | awk '{ print $$1 }'` ; cp -Rp $(PTERMPKGNAME) /Volumes/ptermvol; hdiutil detach $$dev

pterm-$(PTERMVERSION).dmg: ptermkit.dmg
	rm -f $@
	hdiutil convert -format UDZO $< -o $@
	hdiutil internet-enable -yes $@

pterm-kit: pterm-$(PTERMVERSION).dmg

else

pterm-kit: pterm.spec ptermversion.h $(MOFILES) pterm-$(PTERMVERSION).tar.bz2
	cp pterm-$(PTERMVERSION).tar.bz2 ~/rpmbuild/SOURCES
	rpmbuild -ba pterm.spec
	cp /home/pkoning/rpmbuild/RPMS/i386/pterm-$(PTERMVERSION)-1.i386.rpm .
	cp /home/pkoning/rpmbuild/SRPMS/pterm-$(PTERMVERSION)-1.src.rpm .

endif

mofiles: $(MOFILES)

ifneq ("$(PTSRCS)", "")
pterm-tar: pterm-$(PTERMVERSION).tar.bz2

pterm-$(PTERMVERSION).tar.bz2: ptermversion.h license.txt pterm-license.txt README-build.txt CHANGES-pterm.txt $(PTSRCS) Makefile Makefile.wxpterm Makefile.common languages getkitver.py wxversion.py PtermHelpHeader.py ptermhelp.mte
	mkdir pterm-$(PTERMVERSION)
	cd pterm-$(PTERMVERSION); for f in $(LANGUAGES); do mkdir $$f; cd $$f; ln -s ../../$$f/pterm.po .; cd ..; done
	cd pterm-$(PTERMVERSION); for f in $^ ; do ln -s ../$$f .; done
	tar chjf pterm-$(PTERMVERSION).tar.bz2 pterm-$(PTERMVERSION)
	rm -rf pterm-$(PTERMVERSION)
endif

%.o : %.cpp
	$(CXX) -c -Wall -Wno-sign-compare $(C2FLAGS) $(CXXFLAGS) $<

ifeq ("$(HOST)","Darwin")
%.o : %.m
	$(CC) -c -Wall -Wno-sign-compare $(CFLAGS) $<
endif

pterm_sdl.o : pterm_sdl.c
	$(CC) $(CFLAGS) $(SDLCFLAGS) -I $(SNDINCL) -c $<

%.d : %.cpp
	/bin/echo -n "$@ " > /tmp/$@
	$(CXX) $(INCL) $(CXXFLAGS) -MM -MG $< | fgrep -v type_traits >> /tmp/$@
	mv -f /tmp/$@ $@

pterm_sdl.d : pterm_sdl.c
	/bin/echo -n "$@ " > /tmp/$@
	$(CC) $(INCL) $(SDLCFLAGS) -I $(SNDINCL) -MM -MG $< | fgrep -v type_traits  >> /tmp/$@
	mv -f /tmp/$@ $@

%.mo : %.po
	msgfmt -o $@ $<

pterm.pot : $(SOURCES)
	xgettext --from-code=UTF-8 --keyword=_  -C -o $@ $^

%.po :  pterm.pot
	msgmerge $(MSGFLAGS) $@ pterm.pot

pterm_wx.o : pterm_wx.cpp wxversion.h ptermversion.h


# for pterm
INCL+=$(SDLINCL)
DEPFILES+=  $(PTOBJS:.o=.d) 

ifneq ("$(wildcard dd60.cpp)","")
# for dd60
DEPFILES+= dd60.d knob.d iir.d
# for dtoper
DEPFILES+= dtoper.d
endif

#---------------------------  End Of File  --------------------------------

